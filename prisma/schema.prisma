generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model account {
  account_id                              BigInt     @id
  name                                    String     @unique(map: "name_unique") @db.VarChar(255)
  starting_balance                        Float
  type                                    Float?
  expense_expense_accountToaccount        expense[]  @relation("expense_accountToaccount")
  income_income_accountToaccount          income[]   @relation("income_accountToaccount")
  transfer_transfer_to_accountToaccount   transfer[] @relation("transfer_to_accountToaccount")
  transfer_transfer_from_accountToaccount transfer[] @relation("transfer_from_accountToaccount")
}

model expense {
  expense_id                                            BigInt          @id
  amount                                                Float
  date                                                  DateTime?       @db.DateTime(6)
  name                                                  String?         @db.VarChar(255)
  account                                               BigInt?
  expense_source                                        BigInt?
  expense_source_expense_expense_sourceToexpense_source expense_source? @relation("expense_expense_sourceToexpense_source", fields: [expense_source], references: [expense_source_id], onDelete: NoAction, onUpdate: NoAction, map: "FKasrdfgv1tf4ll28cip8lqufbd")
  account_expense_accountToaccount                      account?        @relation("expense_accountToaccount", fields: [account], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "FKavekofqotto1kepft40ajlhhb")

  @@index([expense_source], map: "FKasrdfgv1tf4ll28cip8lqufbd")
  @@index([account], map: "FKavekofqotto1kepft40ajlhhb")
}

model expense_source {
  expense_source_id                              BigInt    @id
  budget                                         Float
  name                                           String    @unique(map: "name_unique") @db.VarChar(255)
  expense_expense_expense_sourceToexpense_source expense[] @relation("expense_expense_sourceToexpense_source")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hibernate_sequence {
  next_val BigInt?

  @@ignore
}

model income {
  income_id                                         BigInt         @id
  amount                                            Float
  date                                              DateTime?      @db.DateTime(6)
  name                                              String?        @db.VarChar(255)
  account                                           BigInt?
  income_source                                     BigInt?
  income_source_income_income_sourceToincome_source income_source? @relation("income_income_sourceToincome_source", fields: [income_source], references: [income_source_id], onDelete: NoAction, onUpdate: NoAction, map: "FK9r6ec7l66vi8xntf6vqi0cn97")
  account_income_accountToaccount                   account?       @relation("income_accountToaccount", fields: [account], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "FKioxrghe9fqdrujr30t5ty301e")

  @@index([income_source], map: "FK9r6ec7l66vi8xntf6vqi0cn97")
  @@index([account], map: "FKioxrghe9fqdrujr30t5ty301e")
}

model income_source {
  income_source_id                           BigInt   @id
  goal                                       Float?
  name                                       String?  @unique(map: "name_unique") @db.VarChar(255)
  income_income_income_sourceToincome_source income[] @relation("income_income_sourceToincome_source")
}

model transfer {
  transfer_id                            BigInt    @id
  amount                                 Float
  date                                   DateTime? @db.DateTime(6)
  name                                   String?   @db.VarChar(255)
  from_account                           BigInt?
  to_account                             BigInt?
  account_transfer_to_accountToaccount   account?  @relation("transfer_to_accountToaccount", fields: [to_account], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "FK18b1dc8ofm236dlk34v2yoby0")
  account_transfer_from_accountToaccount account?  @relation("transfer_from_accountToaccount", fields: [from_account], references: [account_id], onDelete: NoAction, onUpdate: NoAction, map: "FKi1h8alw4w1dhakn9smoonidr5")

  @@index([to_account], map: "FK18b1dc8ofm236dlk34v2yoby0")
  @@index([from_account], map: "FKi1h8alw4w1dhakn9smoonidr5")
}
